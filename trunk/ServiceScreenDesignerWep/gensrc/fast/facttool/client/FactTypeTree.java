/*
 * GWT compliant generated by Fujaba - CodeGen2 version 03.12.2009
 */

package fast.facttool.client;

import fast.common.client.ServiceDesigner;
import fast.common.client.FactType;
import fast.facttool.client.FactTypePanel;
import java.util.*;
import de.uni_kassel.webcoobra.client.CoobraRoot;
import com.google.gwt.user.client.ui.RootPanel;
import fujaba.web.runtime.client.FTest;
import com.google.gwt.user.client.ui.TabPanel;
import com.google.gwt.user.client.ui.Tree;
import com.google.gwt.user.client.ui.HorizontalPanel;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.TreeItem;
import com.google.gwt.user.client.ui.TextBox;
import fujaba.web.runtime.client.reflect.*;
import fujaba.web.runtime.client.*;
import java.util.*;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.event.dom.client.ClickEvent;




public class FactTypeTree
{

   public void removeAllFrom(String className) 
   {
   }
   
   /**
   Return ArrayList of all atrr names
   */
   public java.util.ArrayList arrayListOfAttrNames() 
   {
      java.util.ArrayList vec = new java.util.ArrayList();
   	
      return vec;
   }

   // generic set and get methods
   public void set (String fieldName, Object value)
   {
   }  

   public void add (String fieldName, Object value)
   {
      set (fieldName, value);
   }

   public Object get (String fieldName)
   {
      return null;
   }

   // create attributes for all objects in all states of this statechart
   private HorizontalPanel panel;
   private Iterator fujaba__IterDesignerToFactType;
   private ServiceDesigner designer;
   private CoobraRoot coobraRoot;
   private TreeItem rootItem;
   private FactType factType;
   private Label label;
   private FactType newType;
   private FactTypePanel factTypePanel;
   private HorizontalPanel captionPanel;
   private TextBox uriCaption;
   private TextBox nameCaption;
   private Iterator fujaba__IterCoobraRootToDesigner;
   private Tree tree;
   private TreeItem captionItem;
   private Button addButton;
   private RootPanel rootPanel;
   private TextBox mnemonicCaption;
   private TabPanel tabPanel;
   private Object _TmpObject;

   public void start()
   {
      initStateChart();
      // call doAction on initial state
      buildPanel.doAction();
   }

   public void start(FAction parent)
   {
      initStateChart();
      //set parent of rootState
      buildPanel.setToParent(parent);
      // call doAction on rootState
      buildPanel.doAction();
   }

   // GWT statechart code
   public void initStateChart()
   {
      if(buildPanel != null)
         return;

      addButtonHandler = new AddButtonHandler ();
      addKids = new AddKids ();
      buildPanel = new BuildPanel ();
      expandTree = new ExpandTree ();
      // NONE

      //buildPanel.addToFollowers("addButton.click", addButtonHandler);
      // NONE

      //buildPanel.addToFollowers("auto", addKids);
      // NONE

      //addKids.addToFollowers("auto", expandTree);
   }


   private AddButtonHandler addButtonHandler;
   public class AddButtonHandler extends FAction
   {
       public void doAction()
       {
   		 boolean fujaba__Success = false;

         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object designer is really bound
            JavaSDM.ensure ( designer != null );
            // create object newType
            newType = new FactType ( );

            // create object factTypePanel
            factTypePanel = new FactTypePanel ( );

            // create link factTypes from newType to designer
            newType.setServiceDesigner (designer);

            // collabStat call
            factTypePanel.start(newType, rootItem);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }



       }

   }

   private AddKids addKids;
   public class AddKids extends FAction
   {
       public void doAction()
       {
   		 boolean fujaba__Success = false;

         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object designer is really bound
            JavaSDM.ensure ( designer != null );
            // iterate to-many link factTypes from designer to factType
            fujaba__Success = false;
            fujaba__IterDesignerToFactType = designer.iteratorOfFactTypes ();

            while ( fujaba__IterDesignerToFactType.hasNext () )
            {
               try
               {
                  factType = (FactType) fujaba__IterDesignerToFactType.next ();

                  // check object factType is really bound
                  JavaSDM.ensure ( factType != null );
                  // create object factTypePanel
                  factTypePanel = new FactTypePanel ( );

                  // collabStat call
                  factTypePanel.start(factType, rootItem);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }
            }
            JavaSDM.ensure (fujaba__Success);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }



   		 if( autoGuardAddKids1 == null)
   		 {
   			 autoGuardAddKids1 = new AutoGuardAddKids1();
   			 autoGuardAddKids1.setSource(addKids);
   			 autoGuardAddKids1.setTarget(expandTree);
   			 addKids.addToAutoTransitions(autoGuardAddKids1.toString(), autoGuardAddKids1);
   		 }

   		 doAuto();
       }

      private AutoGuardAddKids1 autoGuardAddKids1;
      private class AutoGuardAddKids1 extends FGuard
      {
      }

   }

   private BuildPanel buildPanel;
   public class BuildPanel extends FAction
   {
       public void doAction()
       {
   		 boolean fujaba__Success = false;

         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            coobraRoot = CoobraRoot.get();

            // check object coobraRoot is really bound
            JavaSDM.ensure ( coobraRoot != null );
            rootPanel = RootPanel.get();

            // check object rootPanel is really bound
            JavaSDM.ensure ( rootPanel != null );
            // iterate to-many link sharedObjects from coobraRoot to designer
            fujaba__Success = false;
            fujaba__IterCoobraRootToDesigner = coobraRoot.iteratorOfSharedObjects ();

            while ( !(fujaba__Success) && fujaba__IterCoobraRootToDesigner.hasNext () )
            {
               try
               {
                  _TmpObject =  fujaba__IterCoobraRootToDesigner.next ();

                  // ensure correct type and really bound of object designer
                  JavaSDM.ensure ( _TmpObject instanceof ServiceDesigner );
                  designer = (ServiceDesigner) _TmpObject;


                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }
            }
            JavaSDM.ensure (fujaba__Success);
            // create object tabPanel
            tabPanel = new TabPanel ( );

            // create object tree
            tree = new Tree ( );

            // create object panel
            panel = new HorizontalPanel ( );

            // create object label
            label = new Label ( );

            // create object addButton
            addButton = new Button ( );

            // create object rootItem
            rootItem = tree.addItem(panel);

            // create object captionPanel
            captionPanel = new HorizontalPanel ( );

            // create object nameCaption
            nameCaption = new TextBox ( );

            // create object mnemonicCaption
            mnemonicCaption = new TextBox ( );

            // create object uriCaption
            uriCaption = new TextBox ( );

            // create object captionItem
            captionItem = rootItem.addItem(captionPanel);

            // assign attribute label
            label.setText ("Fact Types: ");
            // assign attribute addButton
            addButton.setText ("add");
            // assign attribute nameCaption
            nameCaption.setText ("name");
            // assign attribute nameCaption
            nameCaption.setEnabled (false);
            // assign attribute mnemonicCaption
            mnemonicCaption.setText ("mnemonic");
            // assign attribute mnemonicCaption
            mnemonicCaption.setEnabled (false);
            // assign attribute uriCaption
            uriCaption.setText ("uri");
            // assign attribute uriCaption
            uriCaption.setEnabled (false);
            // create link widget from panel to label
            panel.add (label);

            // create link widget from panel to addButton
            panel.add (addButton);

            // create link widget from rootPanel to tabPanel
            rootPanel.add (tabPanel);

            // create link widget from captionPanel to nameCaption
            captionPanel.add (nameCaption);

            // create link widget from captionPanel to mnemonicCaption
            captionPanel.add (mnemonicCaption);

            // create link widget from captionPanel to uriCaption
            captionPanel.add (uriCaption);

            // collabStat call
            FTest.assertTrue(true, "build panel reached");
            // collabStat call
            tabPanel.add(tree,"FactTool");
            // collabStat call
            tabPanel.selectTab(0);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


         addButton.addClickHandler(addButtonHandler);

   		 if( autoGuardBuildPanel1 == null)
   		 {
   			 autoGuardBuildPanel1 = new AutoGuardBuildPanel1();
   			 autoGuardBuildPanel1.setSource(buildPanel);
   			 autoGuardBuildPanel1.setTarget(addKids);
   			 buildPanel.addToAutoTransitions(autoGuardBuildPanel1.toString(), autoGuardBuildPanel1);
   		 }

   		 doAuto();
       }

      private AutoGuardBuildPanel1 autoGuardBuildPanel1;
      private class AutoGuardBuildPanel1 extends FGuard
      {
      }

   }

   private ExpandTree expandTree;
   public class ExpandTree extends FAction
   {
       public void doAction()
       {
   		 boolean fujaba__Success = false;

         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object rootItem is really bound
            JavaSDM.ensure ( rootItem != null );
            // assign attribute rootItem
            rootItem.setState (true);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }



       }

   }

   // my style test for method.vm


   // my style test for method.vm


   // my style test for method.vm


   public void removeYou()
   {
   }
}


